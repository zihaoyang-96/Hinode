;NAME: eis_sgf_para
;
;PURPOSE: to calculate line parameters for Hinode/EIS spectral data, including peak intensity, Doppler velocity and non-thermal widths
;
;INPUT: dir - the directory containing single-Gaussian fit save files generated by sgf_rbp_all.pro
;       element - the element of the spectral line, in string format, e.g. 'Fe'
;       ion_num - the ion number of the spectral line, in string format, for example, for Fe XII line: 'XII'
;       wvl - the literature wavelength of the spectral line, in num format, e.g. 192.39
;
;OUTPUT: A save file containing all the variants in sgf_rbp*.sav files, plus the derived line parameters sgf_para (a 3D array [3,nx,ny])
;
;KEYWORD: wave0 - set this if you want to use user-defined rest wavelength, otherwise the routine will use the wave0 generated by sgf_rbp_all.pro
;
;AUTHOR: Zihao Yang (PKU) at UCL-MSSL, July 20, 2019
;
;NOTE: the user should set the variant 'yws' for each dataset. 'yws' is the CCD Y-pixel number, and it can be read from the fits header.



pro eis_sgf_para, dir, element, ion_num, wvl, wave0=wave0

f=file_search('./sgf_rbp_Fe*.sav', count=fc)

yws=439
for num=0, fc-1 do begin
    file_sgf=f[num]
    restore,file_sgf
    if not(keyword_set(wave0)) then wave0=wave0
    nx=(size(para_sgf))[2]
    ny=(size(para_sgf))[3]

    sgf_para=fltarr(3,nx,ny)
    
    ypix=indgen(ny)+yws
    instr_fwhm=eis_slit_width(ypix,slit_ind=2)

    for ii=0, nx-1 do begin
    for jj=0, ny-1 do begin
        sgf_para[0,ii,jj]=para_sgf[0,ii,jj] ;peak intensity
        sgf_para[1,ii,jj]=(fit_para[1,ii,jj]-wave0)/wave0*3e5 ;Doppler velocity (set a rest wavelength by setting keyword 'wave0')
        sgf_para[2,ii,jj]=eis_width2velocity(element, ion_num, wvl, 2.355*fit_para[2,ii,jj], instr_fwhm=instr_fwhm[jj]);/wave0*3e5 ;non-thermal velocity after subtracting thermal velocity and instrumental width
    endfor
    endfor
    filesave=str_replace(file_sgf, 'sgf_rbp', 'sgf_para')
    save, filename=filesave, sgf_para, para_sgf,chisq_sgf,para_rb,rb_array,r_array,b_array,lineid,solar_x,solar_y,wave0,time,fit_para
endfor
end